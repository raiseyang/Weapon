// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.6.10"
    repositories {
//        // 链接本地nexus服务器
//        maven {
//            setAllowInsecureProtocol(true)
//            url "http://localhost:8081/repository/maven2_group_raise/"
//        }
        mavenLocal()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
    }
}

apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply from: "${rootDir}/scripts/publish-root.gradle"

ext {
    // 版本发布时修改
    weapon_version_code = 10
    weapon_version_name = "0.1.$weapon_version_code"

    junit_version = "4.12"
    annotation_version = "1.3.0"
    appcompat_version = "1.4.0"

    compileSdkVersion = 31// android11
    minSdkVersion = 21 // android5.0
    targetSdkVersion = 31// android11

    // publish to maven center
    PUBLISH_GROUP_ID = 'io.github.raiseyang'
    PUBLISH_VERSION = "${weapon_version_name}"
    PUBLISH_DESCRIPTION = 'weapon sdk'
    PUBLISH_URL = 'https://github.com/raiseyang/Weapon'
    PUBLISH_LICENSE_NAME = 'MIT'
    PUBLISH_LICENSE_URL =
            'https://raiseyang.github.io/Weapon'
    PUBLISH_DEVELOPER_ID = 'raiseyang'
    PUBLISH_DEVELOPER_NAME = 'raiseyang'
    PUBLISH_DEVELOPER_EMAIL = 'yangdongsheng@88.com'
    PUBLISH_SCM_CONNECTION =
            'scm:git@github.com:raiseyang/Weapon.git'
    PUBLISH_SCM_DEVELOPER_CONNECTION =
            'scm:git@github.com:raiseyang/Weapon.git'
    PUBLISH_SCM_URL =
            'https://github.com:raiseyang/Weapon'
}

allprojects {
    repositories {
//        // 链接本地nexus服务器
//        maven {
//            setAllowInsecureProtocol(true)
//            url "http://localhost:8081/repository/maven2_group_raise/"
//        }
        mavenLocal()
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}